plugins {
    id "com.diffplug.spotless" version "5.2.0"
}
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../versioning.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.ddg.android"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode buildVersionCode()
        versionName buildVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled = true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

String[] copiedKotlinFiles = [
        "DeviceInfo",
        "UriExtensions",
].collect { "**/*${it}.kt" } as String[]

spotless {
    ratchetFrom 'HEAD'
    kotlin {
        target "**/src/**/*.kt", "**/src/**/*.kt"
        targetExclude '**/spotless/*.kt', '**/src/test/*.kt', '**/src/androidTest/*.kt'
        targetExclude(copiedKotlinFiles)
        ktlint("0.38.0").userData(['indent_size': '2', 'continuation_indent_size': '2', 'disabled_rules' : 'no-wildcard-imports'])
        licenseHeaderFile rootProject.file('spotless/license.kt')
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target "**/*.gradle"
        trimTrailingWhitespace()
        endWithNewline()
    }
}

ext {
    coreLibraryDesugaring = "1.0.9"

    androidX = "1.2.0-beta01"
    materialDesign = "1.1.0"
    androidKtxCore = "1.6.0"
    constraintLayout = "2.0.0-beta4"
    room = "2.3.0"
    workManager = "2.5.0"
    coreTesting = "2.1.0"
    coroutines = "1.3.5"
    retrofitCoroutinesAdapter = "0.9.2"

    junit = "4.12"
    dagger = "2.37"
    retrofit = "2.8.1"
    ankoVersion = "0.10.4"
    okHttp = "3.14.7"
    rxJava = "2.1.10"
    rxAndroid = "2.0.2"
    timber = "4.7.1"
    rxRelay = "2.0.0"
    mockito = "2.18.3"
    mockitoKotlin = "2.0.0"
    moshi = "1.9.3"
    lifecycle = "2.2.0"
    materialDialogs = "3.2.1"
    preference = "1.1.1"
}

dependencies {
    implementation "androidx.preference:preference-ktx:$preference"


    // Add core library desugaring to get access Java 8+ APIs
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$coreLibraryDesugaring"

    implementation "com.afollestad.rxkprefs:core:2.0.3"
    implementation 'com.github.mancj:MaterialSearchBar:0.8.5'
    implementation 'me.saket.cascade:cascade:1.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$androidKtxCore"
    implementation "androidx.appcompat:appcompat:$androidX"
    implementation "com.google.android.material:material:$materialDesign"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout"
    implementation "com.squareup.okhttp3:okhttp:$okHttp"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    implementation "io.reactivex.rxjava2:rxjava:$rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"
    implementation "com.jakewharton.timber:timber:$timber"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"

    implementation "com.afollestad.material-dialogs:core:$materialDialogs"

    // RxRelay
    implementation "com.jakewharton.rxrelay2:rxrelay:$rxRelay"

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"

    // Android KTX
    implementation "androidx.core:core-ktx:$androidKtxCore"

    testImplementation "androidx.arch.core:core-testing:$coreTesting"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTesting"

    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-rxjava2:$room"
    testImplementation "androidx.room:room-testing:$room"
    androidTestImplementation "androidx.room:room-testing:$room"

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$workManager"
    androidTestImplementation "androidx.work:work-testing:$workManager"
    implementation "androidx.work:work-rxjava2:$workManager"

    // Dagger
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$dagger"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger"


    //lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"

    // Testing dependencies
    testImplementation "junit:junit:$junit"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "com.google.truth:truth:0.46"
}
